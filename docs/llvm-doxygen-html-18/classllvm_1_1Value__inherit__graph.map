<map id="llvm::Value" name="llvm::Value">
<area shape="rect" id="node1" title="LLVM Value Representation." alt="" coords="6,721,95,746"/>
<area shape="rect" id="node3" href="$classllvm_1_1Argument.html" title="This class represents an incoming formal argument to a Function." alt="" coords="170,622,281,647"/>
<area shape="rect" id="node5" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation." alt="" coords="164,671,287,697"/>
<area shape="rect" id="node7" href="$classllvm_1_1InlineAsm.html" title=" " alt="" coords="169,721,281,746"/>
<area shape="rect" id="node9" href="$classllvm_1_1MetadataAsValue.html" title="Metadata wrapper in the Value hierarchy." alt="" coords="144,770,307,795"/>
<area shape="rect" id="node11" href="$classllvm_1_1User.html" title=" " alt="" coords="184,819,267,845"/>
<area shape="rect" id="node13" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM." alt="" coords="367,178,473,203"/>
<area shape="rect" id="node29" href="$classllvm_1_1DerivedUser.html" title="Extension point for the Value hierarchy." alt="" coords="355,646,485,671"/>
<area shape="rect" id="node33" href="$classllvm_1_1Instruction.html" title=" " alt="" coords="363,991,477,1017"/>
<area shape="rect" id="node87" href="$classllvm_1_1Operator.html" title="This is a utility class that provides an abstraction for the common functionality between Instruction..." alt="" coords="367,1814,473,1839"/>
<area shape="rect" id="node15" href="$classllvm_1_1BlockAddress.html" title="The address of a basic block." alt="" coords="553,5,692,30"/>
<area shape="rect" id="node17" href="$classllvm_1_1ConstantAggregate.html" title="Base class for aggregate constants (with operands)." alt="" coords="537,54,708,79"/>
<area shape="rect" id="node19" href="$classllvm_1_1ConstantData.html" title="Base class for constants with no operands." alt="" coords="555,103,691,129"/>
<area shape="rect" id="node21" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values." alt="" coords="556,153,689,178"/>
<area shape="rect" id="node23" href="$classllvm_1_1DSOLocalEquivalent.html" title="Wrapper for a function that represents a value that functionally represents the original function." alt="" coords="533,202,712,227"/>
<area shape="rect" id="node25" href="$classllvm_1_1GlobalValue.html" title=" " alt="" coords="558,251,687,277"/>
<area shape="rect" id="node27" href="$classllvm_1_1NoCFIValue.html" title="Wrapper for a value that won&#39;t be replaced with a CFI jump table pointer in LowerTypeTestsModule." alt="" coords="559,301,686,326"/>
<area shape="rect" id="node31" href="$classllvm_1_1MemoryAccess.html" title=" " alt="" coords="549,350,697,375"/>
<area shape="rect" id="node35" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="535,399,710,425"/>
<area shape="rect" id="node37" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="549,449,697,474"/>
<area shape="rect" id="node39" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="551,498,695,523"/>
<area shape="rect" id="node41" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="565,547,681,573"/>
<area shape="rect" id="node43" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="567,597,678,622"/>
<area shape="rect" id="node45" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="549,646,696,671"/>
<area shape="rect" id="node47" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="549,695,697,721"/>
<area shape="rect" id="node49" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="541,745,704,770"/>
<area shape="rect" id="node51" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="571,794,674,819"/>
<area shape="rect" id="node53" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="541,843,704,869"/>
<area shape="rect" id="node55" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="567,893,679,918"/>
<area shape="rect" id="node57" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="551,942,694,967"/>
<area shape="rect" id="node59" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="543,991,703,1017"/>
<area shape="rect" id="node61" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="557,1041,688,1066"/>
<area shape="rect" id="node63" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="545,1090,700,1115"/>
<area shape="rect" id="node65" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="552,1139,693,1165"/>
<area shape="rect" id="node67" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="549,1189,696,1214"/>
<area shape="rect" id="node69" href="$classllvm_1_1PHINode.html" title=" " alt="" coords="569,1238,677,1263"/>
<area shape="rect" id="node71" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception." alt="" coords="561,1287,685,1313"/>
<area shape="rect" id="node73" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function." alt="" coords="567,1337,679,1362"/>
<area shape="rect" id="node75" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction." alt="" coords="567,1386,679,1411"/>
<area shape="rect" id="node77" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors." alt="" coords="546,1435,699,1461"/>
<area shape="rect" id="node79" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory." alt="" coords="569,1485,676,1510"/>
<area shape="rect" id="node81" href="$classllvm_1_1SwitchInst.html" title="Multiway switch." alt="" coords="566,1534,679,1559"/>
<area shape="rect" id="node83" href="$classllvm_1_1UnaryInstruction.html" title=" " alt="" coords="549,1583,697,1609"/>
<area shape="rect" id="node85" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior." alt="" coords="547,1633,698,1658"/>
<area shape="rect" id="node89" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="542,1682,703,1737"/>
<area shape="rect" id="node91" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="542,1761,703,1815"/>
<area shape="rect" id="node93" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="542,1839,703,1894"/>
<area shape="rect" id="node95" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="542,1918,703,1973"/>
<area shape="rect" id="node97" href="$classllvm_1_1FPMathOperator.html" title="Utility class for floating point operations which can have information about relaxed accuracy require..." alt="" coords="547,1997,699,2022"/>
</map>
