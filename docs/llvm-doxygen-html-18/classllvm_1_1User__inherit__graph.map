<map id="llvm::User" name="llvm::User">
<area shape="rect" id="node1" title=" " alt="" coords="144,673,227,698"/>
<area shape="rect" id="node5" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM." alt="" coords="287,179,393,205"/>
<area shape="rect" id="node25" href="$classllvm_1_1DerivedUser.html" title="Extension point for the Value hierarchy." alt="" coords="275,511,405,537"/>
<area shape="rect" id="node29" href="$classllvm_1_1Instruction.html" title=" " alt="" coords="283,993,397,1018"/>
<area shape="rect" id="node83" href="$classllvm_1_1Operator.html" title="This is a utility class that provides an abstraction for the common functionality between Instruction..." alt="" coords="287,1894,393,1919"/>
<area shape="rect" id="node2" href="$classllvm_1_1Value.html" title="LLVM Value Representation." alt="" coords="6,673,95,698"/>
<area shape="rect" id="node7" href="$classllvm_1_1BlockAddress.html" title="The address of a basic block." alt="" coords="492,6,631,31"/>
<area shape="rect" id="node9" href="$classllvm_1_1ConstantAggregate.html" title="Base class for aggregate constants (with operands)." alt="" coords="476,55,647,81"/>
<area shape="rect" id="node15" href="$classllvm_1_1ConstantData.html" title="Base class for constants with no operands." alt="" coords="493,105,629,130"/>
<area shape="rect" id="node17" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values." alt="" coords="495,154,628,179"/>
<area shape="rect" id="node19" href="$classllvm_1_1DSOLocalEquivalent.html" title="Wrapper for a function that represents a value that functionally represents the original function." alt="" coords="472,203,651,229"/>
<area shape="rect" id="node21" href="$classllvm_1_1GlobalValue.html" title=" " alt="" coords="497,253,626,278"/>
<area shape="rect" id="node23" href="$classllvm_1_1NoCFIValue.html" title="Wrapper for a value that won&#39;t be replaced with a CFI jump table pointer in LowerTypeTestsModule." alt="" coords="498,302,625,327"/>
<area shape="rect" id="node11" href="$classllvm_1_1ConstantArray.html" title="ConstantArray &#45; Constant Array Declarations." alt="" coords="719,31,857,57"/>
<area shape="rect" id="node13" href="$classllvm_1_1ConstantStruct.html" title=" " alt="" coords="718,81,858,106"/>
<area shape="rect" id="node27" href="$classllvm_1_1MemoryAccess.html" title=" " alt="" coords="487,351,635,377"/>
<area shape="rect" id="node31" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="474,401,649,426"/>
<area shape="rect" id="node33" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="487,450,635,475"/>
<area shape="rect" id="node35" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="489,499,633,525"/>
<area shape="rect" id="node37" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="503,549,619,574"/>
<area shape="rect" id="node39" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="506,598,617,623"/>
<area shape="rect" id="node41" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="488,647,635,673"/>
<area shape="rect" id="node43" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="487,697,635,722"/>
<area shape="rect" id="node45" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="480,746,643,771"/>
<area shape="rect" id="node47" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="510,795,613,821"/>
<area shape="rect" id="node49" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="480,845,643,870"/>
<area shape="rect" id="node51" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="505,894,617,919"/>
<area shape="rect" id="node53" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="490,943,633,969"/>
<area shape="rect" id="node55" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="481,993,641,1018"/>
<area shape="rect" id="node57" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="496,1042,627,1067"/>
<area shape="rect" id="node59" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="484,1091,639,1117"/>
<area shape="rect" id="node61" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="491,1141,632,1166"/>
<area shape="rect" id="node63" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="488,1190,635,1215"/>
<area shape="rect" id="node65" href="$classllvm_1_1PHINode.html" title=" " alt="" coords="507,1239,615,1265"/>
<area shape="rect" id="node67" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception." alt="" coords="499,1289,623,1314"/>
<area shape="rect" id="node69" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function." alt="" coords="505,1338,617,1363"/>
<area shape="rect" id="node71" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction." alt="" coords="505,1387,617,1413"/>
<area shape="rect" id="node73" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors." alt="" coords="485,1437,638,1462"/>
<area shape="rect" id="node75" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory." alt="" coords="508,1486,615,1511"/>
<area shape="rect" id="node77" href="$classllvm_1_1SwitchInst.html" title="Multiway switch." alt="" coords="505,1535,618,1561"/>
<area shape="rect" id="node79" href="$classllvm_1_1UnaryInstruction.html" title=" " alt="" coords="487,1585,635,1610"/>
<area shape="rect" id="node81" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior." alt="" coords="486,1634,637,1659"/>
<area shape="rect" id="node85" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="481,1683,642,1738"/>
<area shape="rect" id="node87" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="481,1762,642,1817"/>
<area shape="rect" id="node89" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="481,1841,642,1895"/>
<area shape="rect" id="node91" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="481,1919,642,1974"/>
<area shape="rect" id="node93" href="$classllvm_1_1FPMathOperator.html" title="Utility class for floating point operations which can have information about relaxed accuracy require..." alt="" coords="485,1998,637,2023"/>
<area shape="rect" id="node95" href="$classllvm_1_1OverflowingBinaryOperator.html" title="Utility class for integer operators which may exhibit overflow &#45; Add, Sub, Mul, and Shl." alt="" coords="454,2047,669,2073"/>
<area shape="rect" id="node97" href="$classllvm_1_1PossiblyExactOperator.html" title="A udiv or sdiv instruction, which can be marked as &quot;exact&quot;, indicating that no bits are destroyed." alt="" coords="466,2097,657,2122"/>
</map>
